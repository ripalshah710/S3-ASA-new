{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "An AWS Serverless Application.",
   "Parameters" : {
  "LambdaRole" : {
    "Type" : "String",
    "Default" : "{{resolve:ssm:LambdaExecutionRole:1}}",
    "Description" : "Lambda Role ARN"
  },
  "UserPoolArn" : {
    "Type" : "String",
    "Default" : "{{resolve:ssm:CognitoAuthorizerUserPoolArn:1}}",
    "Description" : "Cognito Authorizer User Pool Arn"
  }
},
  "Resources": {
    "SimpleS3":{
     "Type": "AWS::S3::Bucket",
     "Properties" : {
        "BucketName" : "ftp-operation",
        "CorsConfiguration":{
            "CorsRules": [
                {
                    "AllowedHeaders": ["*"],
                    "AllowedMethods": [
                         "GET",
                        "PUT",
                        "POST",
                        "DELETE",
                        "HEAD"
                    ],
                    "AllowedOrigins": ["*"],
                    "ExposedHeaders": [],
                    "Id": "ftp-operation-core-rules",
                    "MaxAge": 3000
                }
            ]
        }
     }
    },
    "S3UserApi": {
      "Type": "AWS::Serverless::Api",
      "Properties": {
        "Name" : "S3-APIs",
        "StageName": "Dev",
        "Auth":{
            "DefaultAuthorizer":"MyLambdaRequestAuthorizer",
            "Authorizers":{
                "MyLambdaRequestAuthorizer":{
                    "FunctionPayloadType":"REQUEST",
                    "FunctionArn" : { 
                        "Fn::GetAtt" : [ 
                            "LambdaAuthorizer", 
                            "Arn" 
                          ] 
                        },
                    "Identity":{
                        "Headers" : [
                            "userName",
                            "passWord "
                        ]
                    }
                },
                "MyCognitoAuthorizer":{
                    "AuthorizationScopes":[
                    "connection/connection.read",
                    "api-users/add"
                    ],
                    "UserPoolArn" : { "Ref" : "UserPoolArn"},
                    "Identity":{
                        "Headers" : "Authorization",
                        "ValidationExpression" : "Bearer.*",
                        "ReauthorizeEvery" : 30
                    }
                }
            }
        },
        "BinaryMediaTypes": [
          "*~1*"
        ]
      }
    },
    "LambdaAuthorizer":{
     "Type": "AWS::Serverless::Function",
        "Properties": {
            "FunctionName": "S3-Custom-Authorizer",
            "Description": "A Lambda function that authorize the different API Gateway",
            "CodeUri": "",
            "Handler": "S3-ASA::S3_ASA.Authorizer::Get",
            "Runtime": "dotnetcore3.1",
            "MemorySize": 256,
            "Timeout": 30,
            "Role": { "Ref" : "LambdaRole"},
            "Events": {
                "RootGet": {
                "Type": "Api",
                "Properties": {
                    "Path": "/",
                    "Method": "GET"
                }
                }
            }
          }
        },
    "ScheduledTimer":{
        "Type": "AWS::Serverless::Function",
        "Properties": {
            "FunctionName": "S3-ASA-Scheduled-Upload",
            "Description": "A Lambda function that create the Sessionlist and upload on S3",
            "CodeUri": "",
            "Handler": "S3-ASA::S3_ASA.Functions::SessionListHandler",
            "Runtime": "dotnetcore3.1",
            "MemorySize": 256,
            "Timeout": 30,
            "Role": { "Ref" : "LambdaRole"},
            "Environment": {
             "Variables" : {
              "BUCKET_NAME": "ftp-operation",
              "FILE_NAME": "session_updated.xml",
              "PATH_NAME": "DailySessionList"
              }
            },
             "Events": {
                "CloudWatchEvent":{
                  "Type": "Schedule",
                  "Properties": {
                    "Name": "S3-ASA-ClouldWatch-Event-Rule",
                    "Schedule": "rate(10 hours)"
                    }
                  }
               },
              "VpcConfig": {
                "SecurityGroupIds": [
                   "sg-0bbd7d38acdd3dc18"
                  ],
                "SubnetIds":[
                  "subnet-001e3983a9fe5576a",
                  "subnet-002500af93aa39ce5"
                  ]
               }
            }
        },
    "UploadS3": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "S3-ASA-OnDembad-Upload",
        "Description": "A Lambda function that upload file in S3 on Demand",
        "Handler": "S3-ASA::S3_ASA.Functions::UploadS3",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": { "Ref" : "LambdaRole"},
        "Environment": {
             "Variables" : {
              "BUCKET_NAME": "ftp-operation",
              "FILE_NAME": "session_updated.xml",
              "PATH_NAME": "DailySessionList"
              }
            },
        "Events": {
          "RootGet": {
            "Type": "Api",
            "Properties": {
              "Path": "/",
              "Method": "GET",
              "Auth":{
               "Authorizer" : "MyLambdaRequestAuthorizer"
              },
              "RestApiId": {
                "Ref": "S3UserApi"
              }
            }
          }
        },
        "VpcConfig": {
                "SecurityGroupIds": [
                   "sg-0bbd7d38acdd3dc18"
                  ],
                "SubnetIds":[
                  "subnet-001e3983a9fe5576a",
                  "subnet-002500af93aa39ce5"
                  ]
               }
      }
    },
    "DownloadS3": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "S3-ASA-OnDembad-Download",
        "Description": "A Lambda function that download file in S3 on Demand",
        "Handler": "S3-ASA::S3_ASA.Functions::DownloadS3",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": { "Ref" : "LambdaRole"},
        "Environment": {
             "Variables" : {
              "BUCKET_NAME": "ftp-operation",
              "FILE_NAME": "session_updated.xml",
              "PATH_NAME": "DailySessionList"
              }
            },
        "Events": {
          "RootGet": {
            "Type": "Api",
            "Properties": {
              "Path": "/download",
              "Method": "GET",
              "Auth":{
               "Authorizer" : "MyLambdaRequestAuthorizer"
              },
              "RestApiId": {
                "Ref": "S3UserApi"
              }
            }
          }
        },
        "VpcConfig": {
                "SecurityGroupIds": [
                   "sg-0bbd7d38acdd3dc18"
                  ],
                "SubnetIds":[
                  "subnet-001e3983a9fe5576a",
                  "subnet-002500af93aa39ce5"
                  ]
               }
      }
    },
    "ClientUploadS3": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "S3-ASA-Client-Upload",
        "Description": "A Lambda function that download file in S3 on Demand",
        "Handler": "S3-ASA::S3_ASA.Functions::ClientUploadS3",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": { "Ref" : "LambdaRole"},
        "Environment": {
             "Variables" : {
              "BUCKET_NAME": "ftp-operation",
              "FILE_NAME": "session_updated.xml",
              "PATH_NAME": "DailySessionList"
              }
            },
        "Events": {
          "RootGet": {
            "Type": "Api",
            "Properties": {
              "Path": "/client-upload",
              "Method": "GET",
              "Auth":{
               "Authorizer" : "MyCognitoAuthorizer"
              },
              "RestApiId": {
                "Ref": "S3UserApi"
              }
            }
          }
        },
        "VpcConfig": {
                "SecurityGroupIds": [
                   "sg-0bbd7d38acdd3dc18"
                  ],
                "SubnetIds":[
                  "subnet-001e3983a9fe5576a",
                  "subnet-002500af93aa39ce5"
                  ]
               }
      }
    },
    "ClientDownloadS3": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "S3-ASA-Client-Download",
        "Description": "A Lambda function that download file in S3 on Demand",
        "Handler": "S3-ASA::S3_ASA.Functions::ClientDownloadS3",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": { "Ref" : "LambdaRole"},
        "Environment": {
             "Variables" : {
              "BUCKET_NAME": "ftp-operation",
              "FILE_NAME": "session_updated.xml",
              "PATH_NAME": "DailySessionList"
              }
            },
        "Events": {
          "RootGet": {
            "Type": "Api",
            "Properties": {
              "Path": "/client-download",
              "Method": "GET",
               "Auth":{
               "Authorizer" : "MyCognitoAuthorizer"
              },
              "RestApiId": {
                "Ref": "S3UserApi"
              }
            }
          }
        },
        "VpcConfig": {
                "SecurityGroupIds": [
                   "sg-0bbd7d38acdd3dc18"
                  ],
                "SubnetIds":[
                  "subnet-001e3983a9fe5576a",
                  "subnet-002500af93aa39ce5"
                  ]
               }
      }
    },
    "UploadFTP": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "S3-ASA-OnDembad-Upload-FTP",
        "Description": "A Lambda function that upload file in FTP on Demand",
        "Handler": "S3-ASA::S3_ASA.Functions::UploadFTP",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": { "Ref" : "LambdaRole"},
        "Environment": {
             "Variables" : {
              "BUCKET_NAME": "ftp-operation",
              "FILE_NAME": "session_updated.xml",
              "PATH_NAME": "DailySessionList",
              "FTP_SERVER":"",
              "FTP_USER_NAME":"",
              "FTP_PASSWORD":"",
              "FTP_PORT":"",
              "FTP_FILE_PATH":"DailySessionList",
              "FTP_FILE_NAME":"session_updated.xml"
              }
            },
        "Events": {
          "RootGet": {
            "Type": "Api",
            "Properties": {
              "Path": "/upload-ftp",
              "Method": "GET",
              "RestApiId": {
                "Ref": "S3UserApi"
              }
            }
          }
        },
        "VpcConfig": {
                "SecurityGroupIds": [
                   "sg-0bbd7d38acdd3dc18"
                  ],
                "SubnetIds":[
                  "subnet-001e3983a9fe5576a",
                  "subnet-002500af93aa39ce5"
                  ]
               }
      }
    },
    "DownloadFTP": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "S3-ASA-OnDembad-Download-FTP",
        "Description": "A Lambda function that download file in FTP on Demand",
        "Handler": "S3-ASA::S3_ASA.Functions::DownloadFTP",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": { "Ref" : "LambdaRole"},
        "Environment": {
             "Variables" : {
              "BUCKET_NAME": "ftp-operation",
              "FILE_NAME": "session_updated.xml",
              "PATH_NAME": "DailySessionList",
              "FTP_SERVER":"",
              "FTP_USER_NAME":"",
              "FTP_PASSWORD":"",
              "FTP_PORT":"",
              "FTP_FILE_PATH":"DailySessionList",
              "FTP_FILE_NAME":"session_updated.xml"
              }
            },
        "Events": {
          "RootGet": {
            "Type": "Api",
            "Properties": {
              "Path": "/download-ftp",
              "Method": "GET",
              "RestApiId": {
                "Ref": "S3UserApi"
              }
            }
          }
        },
        "VpcConfig": {
                "SecurityGroupIds": [
                   "sg-0bbd7d38acdd3dc18"
                  ],
                "SubnetIds":[
                  "subnet-001e3983a9fe5576a",
                  "subnet-002500af93aa39ce5"
                  ]
               }
      }
    }
},
  "Outputs": {
    "BucketName": {
      "Description": "API endpoint URL for Prod environment",
      "Value": "!Ref SimpleS3"
    },
    "ApiURL": {
      "Description": "API endpoint URL for Prod environment",
      "Value": {
        "Fn::Sub": "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      }
    }
  }
}